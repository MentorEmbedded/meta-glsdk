From 4956594e4797da8ee732f5f60ecdca3434a51beb Mon Sep 17 00:00:00 2001
From: Nikhil Devshatwar <nikhil.nd@ti.com>
Date: Thu, 19 Jun 2014 21:00:48 +0530
Subject: [PATCH 3/6] v4l: ti-vps: vip: Flush Q/DQ lists even if not streaming

When start_streaming fails, driver would return some error but it
might be possible that some buffers are already queued in the driver.
When closing the device or explicitely calling stream off, driver
doesn't flush all the buffers from Q list and DQ list if vb2 isn't streaming.

Fix this by flushing all the buffers in stop_streaming irrespective of
wheather streaming or not

Change-Id: I17894301574e487e5d4468393405ad138f19ac89
Signed-off-by: Nikhil Devshatwar <nikhil.nd@ti.com>
---
 drivers/media/platform/ti-vps/vip.c |   13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/ti-vps/vip.c b/drivers/media/platform/ti-vps/vip.c
index 6e4f776..495d462 100644
--- a/drivers/media/platform/ti-vps/vip.c
+++ b/drivers/media/platform/ti-vps/vip.c
@@ -1547,12 +1547,6 @@ static int vip_stop_streaming(struct vb2_queue *vq)
 	struct vip_dev *dev = port->dev;
 	struct vip_buffer *buf;
 
-	if (!vb2_is_streaming(vq))
-		return 0;
-
-	vpdma_unmap_desc_buf(dev->shared->vpdma, &dev->desc_list.buf);
-	vpdma_reset_desc_list(&dev->desc_list);
-
 	disable_irqs(dev, dev->slice_id);
 	/* release all active buffers */
 	while (!list_empty(&dev->vip_bufs)) {
@@ -1566,6 +1560,13 @@ static int vip_stop_streaming(struct vb2_queue *vq)
 		list_del(&buf->list);
 		vb2_buffer_done(&buf->vb, VB2_BUF_STATE_ERROR);
 	}
+
+	if (!vb2_is_streaming(vq))
+		return 0;
+
+	vpdma_unmap_desc_buf(dev->shared->vpdma, &dev->desc_list.buf);
+	vpdma_reset_desc_list(&dev->desc_list);
+
 	return 0;
 }
 
-- 
1.7.9.5

